---

# Cluster CIDR Rules (Pod-to-Pod) - Updated for 172.16.0.0/16
- name: "Allow cluster-cidr forward (source)"
  ansible.builtin.iptables:
    action: insert
    chain: FORWARD
    source: '{{ rke2_cluster_cidr | default("172.16.0.0/16") | string }}'
    jump: ACCEPT

- name: "Allow cluster-cidr forward (destination)"
  ansible.builtin.iptables:
    action: insert
    chain: FORWARD
    destination: '{{ rke2_cluster_cidr | default("172.16.0.0/16") | string }}'
    jump: ACCEPT

- name: "Allow cluster-cidr input (source)"
  ansible.builtin.iptables:
    action: insert
    chain: INPUT
    source: '{{ rke2_cluster_cidr | default("172.16.0.0/16") | string }}'
    jump: ACCEPT

- name: "Allow cluster-cidr input (destination)"
  ansible.builtin.iptables:
    action: insert
    chain: INPUT
    destination: '{{ rke2_cluster_cidr | default("172.16.0.0/16") | string }}'
    jump: ACCEPT

# Service CIDR Rules (Pod-to-Service) - CRITICAL FOR DNS
- name: "Allow service-cidr forward (source)"
  ansible.builtin.iptables:
    action: insert
    chain: FORWARD
    source: '{{ rke2_service_cidr | default("172.17.0.0/16") | string }}'
    jump: ACCEPT

- name: "Allow service-cidr forward (destination)"
  ansible.builtin.iptables:
    action: insert
    chain: FORWARD
    destination: '{{ rke2_service_cidr | default("172.17.0.0/16") | string }}'
    jump: ACCEPT

- name: "Allow service-cidr input (source)"
  ansible.builtin.iptables:
    action: insert
    chain: INPUT
    source: '{{ rke2_service_cidr | default("172.17.0.0/16") | string }}'
    jump: ACCEPT

- name: "Allow service-cidr input (destination)"
  ansible.builtin.iptables:
    action: insert
    chain: INPUT
    destination: '{{ rke2_service_cidr | default("172.17.0.0/16") | string }}'
    jump: ACCEPT

# Pod-to-Service Communication (MOST IMPORTANT FOR DNS)
- name: "Allow pods to reach services"
  ansible.builtin.iptables:
    action: insert
    chain: FORWARD
    source: '{{ rke2_cluster_cidr | default("172.16.0.0/16") | string }}'
    destination: '{{ rke2_service_cidr | default("172.17.0.0/16") | string }}'
    jump: ACCEPT

- name: "Allow services to respond to pods"
  ansible.builtin.iptables:
    action: insert
    chain: FORWARD
    source: '{{ rke2_service_cidr | default("172.17.0.0/16") | string }}'
    destination: '{{ rke2_cluster_cidr | default("172.16.0.0/16") | string }}'
    jump: ACCEPT

# Allow all traffic within service CIDR (for service mesh communication)
- name: "Allow service-to-service communication"
  ansible.builtin.iptables:
    action: insert
    chain: FORWARD
    source: '{{ rke2_service_cidr | default("172.17.0.0/16") | string }}'
    destination: '{{ rke2_service_cidr | default("172.17.0.0/16") | string }}'
    jump: ACCEPT

- name: Save iptables
  ansible.builtin.shell: "iptables-save > /etc/sysconfig/iptables"
  become: true
  changed_when: false
  when: ansible_facts['os_family'] == 'RedHat'

- name: Install iptables-persistent
  ansible.builtin.apt:
    name: iptables-persistent
    state: present
  when: ansible_facts['os_family'] == 'Debian'

- name: Save iptables
  ansible.builtin.shell: "iptables-save > /etc/iptables/rules.v4"
  become: true
  changed_when: false
  when: ansible_facts['os_family'] == 'Debian'
