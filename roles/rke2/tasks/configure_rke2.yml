---

- name: Create the /etc/rancher/rke2 config dir
  ansible.builtin.file:
    path: /etc/rancher/rke2
    state: directory
    recurse: true

- name: Run CIS-Hardening Tasks
  ansible.builtin.include_tasks: cis_hardening.yml

- name: Include task file add-systemd-env.yml
  ansible.builtin.include_tasks: add_ansible_managed_config.yml
  vars:
    file_contents: "{{ lookup('file', rke2_systemd_env_config_file_path) }}"
    file_destination: "/etc/default/{{ service_name }}"
    file_description: "systemd env options"
    file_path: "{{ rke2_systemd_env_config_file_path }}"

- name: "Include task file add_ansible_managed_config.yml for {{ file_description }}"
  ansible.builtin.include_tasks: add_ansible_managed_config.yml
  vars:
    file_contents: "{{ lookup('file', rke2_registry_config_file_path) }}"
    file_destination: "/etc/rancher/rke2/registries.yaml"
    file_description: "registry configuration"
    file_path: "{{ rke2_registry_config_file_path }}"

- name: "Include task file add_ansible_managed_config.yml for {{ file_description }}"
  ansible.builtin.include_tasks: add_ansible_managed_config.yml
  vars:
    file_contents: "{{ lookup('file', rke2_audit_policy_config_file_path) }}"
    file_destination: "/etc/rancher/rke2/audit-policy.yaml"
    file_description: "audit policy configuration"
    file_path: "{{ rke2_audit_policy_config_file_path }}"
  when:
    - inventory_hostname in groups['rke2_servers']

- name: "Include task file add_ansible_managed_config.yml for {{ file_description }}"
  ansible.builtin.include_tasks: add_ansible_managed_config.yml
  vars:
    file_contents: "{{ lookup('file', rke2_pod_security_admission_config_file_path) }}"
    file_destination: "/etc/rancher/rke2/pod-security-admission-config.yaml"
    file_description: "pod security admission config"
    file_path: "{{ rke2_pod_security_admission_config_file_path }}"
  when:
    - inventory_hostname in groups['rke2_servers']

- name: Generate RKE2 main configuration
  ansible.builtin.set_fact:
    rke2_main_config_content: |
      {% if rke2_server is defined and inventory_hostname not in groups['rke2_servers'][:1] %}
      server: {{ rke2_server }}
      {% endif %}
      {% if rke2_token is defined %}
      token: {{ rke2_token }}
      {% endif %}
      {% if rke2_cluster_cidr is defined %}
      cluster-cidr: "{{ rke2_cluster_cidr }}"
      {% endif %}
      {% if rke2_service_cidr is defined %}
      service-cidr: "{{ rke2_service_cidr }}"
      {% endif %}
      {% if rke2_cluster_dns is defined %}
      cluster-dns: "{{ rke2_cluster_dns }}"
      {% endif %}
      {% if rke2_cni is defined %}
      cni: {{ rke2_cni }}
      {% endif %}
      {% if rke2_node_ip is defined %}
      node-ip: {{ rke2_node_ip }}
      {% endif %}
      {% if rke2_advertise_address is defined %}
      advertise-address: {{ rke2_advertise_address }}
      {% endif %}
      {% if rke2_tls_san is defined %}
      tls-san:
      {% for san in rke2_tls_san %}
        - {{ san }}
      {% endfor %}
      {% endif %}
      {% if rke2_write_kubeconfig_mode is defined %}
      write-kubeconfig-mode: "{{ rke2_write_kubeconfig_mode }}"
      {% endif %}
      {% if rke2_cni == "canal" and rke2_canal_config is defined %}
      helm-chart-values:
        - name: rke2-canal
          namespace: kube-system
          values:
            flannel:
              backend: "vxlan"
              iface: "{{ rke2_canal_config.flannel.interface }}"
              vxlan:
                port: {{ rke2_canal_config.flannel.vxlan_port }}
            calico:
              calicoNetwork:
                mtu: {{ rke2_canal_config.calico.mtu }}
              nodeAddressAutodetectionV4:
                interface: "{{ rke2_canal_config.calico.ip_autodetection_method }}"
              felix:
                failsafeInboundHostPorts:
                  - protocol: tcp
                    port: 22
                  - protocol: udp
                    port: 68
                  - protocol: tcp
                    port: 179
                  - protocol: tcp
                    port: 2379
                  - protocol: tcp
                    port: 2380
                  - protocol: tcp
                    port: 6443
                  - protocol: tcp
                    port: 6666
                  - protocol: tcp
                    port: 6667
                  - protocol: udp
                    port: {{ rke2_canal_config.flannel.vxlan_port }}
                iptablesFilterAllowAction: "ACCEPT"
                iptablesMangleAllowAction: "ACCEPT"
      {% endif %}
      {% if rke2_coredns_forwarders is defined %}
        - name: rke2-coredns
          namespace: kube-system
          values:
            servers:
              - zones:
                  - zone: .
                plugins:
                  - name: forward
                    parameters: . {{ rke2_coredns_forwarders | join(' ') }}
                    configBlock: |-
                      except cluster.local
      {% endif %}

- name: "Include task file add_ansible_managed_config.yml for RKE2 main config"
  ansible.builtin.include_tasks: add_ansible_managed_config.yml
  vars:
    file_contents: "{{ rke2_main_config_content }}"
    file_destination: "/etc/rancher/rke2/config.yaml"
    file_description: "RKE2 main configuration"
    file_path: "/etc/rancher/rke2/config.yaml"

- name: Restart RKE2 service after config change
  ansible.builtin.service:
    name: "{{ service_name }}"
    state: restarted
  when: 
    - file_path is defined
    - file_path | length > 0