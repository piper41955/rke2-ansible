---
- name: Create the /etc/rancher/rke2 config dir
  ansible.builtin.file:
    path: /etc/rancher/rke2
    state: directory
    recurse: true
    mode: '0755'
    owner: root
    group: root

- name: Run CIS-Hardening Tasks
  ansible.builtin.include_tasks: cis_hardening.yml

- name: Include task file for systemd environment configuration
  ansible.builtin.include_tasks: add_ansible_managed_config.yml
  vars:
    file_contents: "{{ lookup('file', rke2_systemd_env_config_file_path) }}"
    file_destination: "/etc/default/{{ service_name }}"
    file_description: "systemd env options"
    file_path: "{{ rke2_systemd_env_config_file_path }}"
    validate_yaml: false

- name: Include task file for registry configuration
  ansible.builtin.include_tasks: add_ansible_managed_config.yml
  vars:
    file_contents: "{{ lookup('file', rke2_registry_config_file_path) }}"
    file_destination: "/etc/rancher/rke2/registries.yaml"
    file_description: "registry configuration"
    file_path: "{{ rke2_registry_config_file_path }}"
    validate_yaml: true
  when: rke2_registry_config_file_path is defined and rke2_registry_config_file_path | length > 0

- name: Include task file for audit policy configuration
  ansible.builtin.include_tasks: add_ansible_managed_config.yml
  vars:
    file_contents: "{{ lookup('file', rke2_audit_policy_config_file_path) }}"
    file_destination: "/etc/rancher/rke2/audit-policy.yaml"
    file_description: "audit policy configuration"
    file_path: "{{ rke2_audit_policy_config_file_path }}"
    validate_yaml: true
  when:
    - inventory_hostname in groups['rke2_servers']
    - rke2_audit_policy_config_file_path is defined
    - rke2_audit_policy_config_file_path | length > 0

- name: Include task file for pod security admission config
  ansible.builtin.include_tasks: add_ansible_managed_config.yml
  vars:
    file_contents: "{{ lookup('file', rke2_pod_security_admission_config_file_path) }}"
    file_destination: "/etc/rancher/rke2/pod-security-admission-config.yaml"
    file_description: "pod security admission config"
    file_path: "{{ rke2_pod_security_admission_config_file_path }}"
    validate_yaml: true
  when:
    - inventory_hostname in groups['rke2_servers']
    - rke2_pod_security_admission_config_file_path is defined
    - rke2_pod_security_admission_config_file_path | length > 0

- name: Create RKE2 manifests directory
  ansible.builtin.file:
    path: /var/lib/rancher/rke2/server/manifests
    state: directory
    mode: '0755'
  when: inventory_hostname in groups['rke2_servers']

- name: Create CoreDNS HelmChartConfig to override broken injection
  ansible.builtin.copy:
    content: |
      apiVersion: helm.cattle.io/v1
      kind: HelmChartConfig
      metadata:
        name: rke2-coredns
        namespace: kube-system
      spec:
        valuesContent: |-
          service:
            clusterIP: {{ rke2_cluster_dns }}
          servers:
            - zones:
              - zone: .
              port: 53
              plugins:
              - name: errors
              - name: health
                configBlock: |-
                  lameduck 10s
              - name: ready
              - name: kubernetes
                parameters: cluster.local in-addr.arpa ip6.arpa
                configBlock: |-
                  pods insecure
                  fallthrough in-addr.arpa ip6.arpa
                  ttl 30
              - name: prometheus
                parameters: 0.0.0.0:9153
              - name: forward
                parameters: ". {{ rke2_coredns_forwarders | join(' ') }}"
              - name: cache
                parameters: 30
              - name: loop
              - name: reload
              - name: loadbalance
    dest: /var/lib/rancher/rke2/server/manifests/rke2-coredns-config.yaml
    owner: root
    group: root
    mode: '0644'
  when:
    - inventory_hostname in groups['rke2_servers']
    - rke2_coredns_forwarders is defined
    - rke2_coredns_forwarders | length > 0
  tags:
    - rke2-coredns

- name: Create Canal HelmChartConfig with correct syntax
  ansible.builtin.copy:
    content: |
      apiVersion: helm.cattle.io/v1
      kind: HelmChartConfig
      metadata:
        name: rke2-canal
        namespace: kube-system
      spec:
        valuesContent: |-
          flannel:
            backend: "vxlan"
            iface: "{{ rke2_canal_interface | default(ansible_default_ipv4.interface) }}"
            backendPort: {{ rke2_canal_vxlan_port | default(8472) }}
          calico:
            calicoNetwork:
              mtu: {{ rke2_canal_mtu | default(1450) }}
      {% if rke2_cluster_cidr is defined %}
              ipPools:
                - cidr: "{{ rke2_cluster_cidr }}"
                  encapsulation: None
                  natOutgoing: Enabled
                  nodeSelector: all()
      {% endif %}
            nodeAddressAutodetectionV4:
              interface: "{{ rke2_canal_interface | default(ansible_default_ipv4.interface) }}"
      {% if rke2_service_cidr is defined %}
            serviceCIDRs:
              - "{{ rke2_service_cidr }}"
      {% endif %}
            felix:
              failsafeInboundHostPorts:
                - protocol: tcp
                  port: 22
                - protocol: udp
                  port: 68
                - protocol: tcp
                  port: 179
                - protocol: tcp
                  port: 2379
                - protocol: tcp
                  port: 2380
                - protocol: tcp
                  port: 6443
                - protocol: tcp
                  port: 6666
                - protocol: tcp
                  port: 6667
                - protocol: udp
                  port: {{ rke2_canal_vxlan_port | default(8472) }}
              iptablesFilterAllowAction: "ACCEPT"
              iptablesMangleAllowAction: "ACCEPT"
    dest: /var/lib/rancher/rke2/server/manifests/rke2-canal-config.yaml
    owner: root
    group: root
    mode: '0644'
  when:
    - inventory_hostname in groups['rke2_servers']
    - rke2_cni == "canal"
  tags:
    - rke2-canal

- name: Generate RKE2 main configuration using template
  ansible.builtin.template:
    src: rke2_config.yaml.j2
    dest: "/etc/rancher/rke2/config.yaml"
    mode: '0640'
    owner: root
    group: root
    backup: true
  notify: "Restart {{ service_name }}"

- name: Add token and server config
  ansible.builtin.blockinfile:
    path: /etc/rancher/rke2/config.yaml
    block: |
      server: {{ rke2_server }}
      token: {{ rke2_token }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
  when:
    - rke2_token is defined
    - rke2_server is defined
    - inventory_hostname not in groups['rke2_servers'][:1]

- name: Validate RKE2 configuration syntax
  ansible.builtin.shell: |
    python3 -c "
    import yaml
    try:
        with open('/etc/rancher/rke2/config.yaml', 'r') as f:
            config = yaml.safe_load(f)
        print('YAML syntax is valid')
        print(f'Configuration contains {len(config)} top-level keys')
        if 'helm-chart-values' in config:
            print(f'Found {len(config[\"helm-chart-values\"])} helm chart configurations')
    except yaml.YAMLError as e:
        print(f'YAML Error: {e}')
        exit(1)
    except Exception as e:
        print(f'File Error: {e}')
        exit(1)
    "
  register: yaml_validation
  changed_when: false
  failed_when: yaml_validation.rc != 0

- name: Add iptables rke2_cluster_dns
  ansible.builtin.include_tasks: "iptables_rules.yml"

- name: Show immediate diagnostics results
  ansible.builtin.debug:
    msg: "{{ immediate_diagnostics.stdout_lines }}"
  when:
    - rke2_cni == "canal"
    - immediate_diagnostics is defined
  tags:
    - rke2-debug

# Test standard port vs custom port
- name: Compare standard vs custom VXLAN port connectivity
  ansible.builtin.shell: |
    echo "=== PORT COMPARISON TEST ==="
    echo "Testing both standard (8472) and custom ({{ rke2_canal_vxlan_port | default(8472) }}) ports"

    {% for host in groups['all'] %}
    {% if hostvars[host]['ansible_default_ipv4']['address'] != ansible_default_ipv4.address %}
    TARGET="{{ hostvars[host]['ansible_default_ipv4']['address'] }}"
    echo "Testing to $TARGET:"

    # Test standard port
    timeout 2 bash -c "echo 'test' | nc -u $TARGET 8472" >/dev/null 2>&1 && echo "  ✅ Port 8472: Connected" || echo "  ❌ Port 8472: Failed"

    # Test custom port
    timeout 2 bash -c "echo 'test' | nc -u $TARGET {{ rke2_canal_vxlan_port | default(8472) }}" >/dev/null 2>&1 && echo "  ✅ Port {{ rke2_canal_vxlan_port | default(8472) }}: Connected" || echo "  ❌ Port {{ rke2_canal_vxlan_port | default(8472) }}: Failed"

    break
    {% endif %}
    {% endfor %}

    echo -e "\nRECOMMENDATION:"
    echo "If port 8472 works but {{ rke2_canal_vxlan_port | default(8472) }} doesn't, switch back to standard port"
  register: port_comparison
  when: rke2_cni == "canal"
  tags:
    - rke2-debug

- name: Show port comparison results
  ansible.builtin.debug:
    msg: "{{ port_comparison.stdout_lines }}"
  when:
    - rke2_cni == "canal"
    - port_comparison is defined
  tags:
    - rke2-debug

- name: Display RKE2 configuration summary
  ansible.builtin.debug:
    msg: |
      RKE2 Configuration Summary:
      - Node Type: {{ 'Server' if inventory_hostname in groups['rke2_servers'] else 'Agent' }}
      - Node IP: {{ rke2_node_ip | default(ansible_default_ipv4.address) }}
      - CNI: {{ rke2_cni | default('notSet') }}
      - Cluster CIDR: {{ rke2_cluster_cidr | default('notSet') }}
      - Service CIDR: {{ rke2_service_cidr | default('notSet') }}
      {% if rke2_coredns_forwarders is defined %}
      - DNS Forwarders: {{ rke2_coredns_forwarders | join(', ') }}
      {% endif %}
      {% if rke2_canal_config is defined %}
      - Canal Interface: {{ rke2_canal_config.flannel.interface | default('ens192') }}
      - VXLAN Port: {{ rke2_canal_config.flannel.vxlan_port | default(8472) }}
      {% endif %}

- name: Start and enable RKE2 service
  ansible.builtin.service:
    name: "{{ service_name }}"
    state: started
    enabled: true
  register: rke2_service_start
  retries: 3
  delay: 10
  until: rke2_service_start is succeeded

- name: Check if Kubernetes API port is open
  ansible.builtin.wait_for:
    port: 6443
    host: "{{ ansible_default_ipv4.address }}"
    timeout: 300
  when: inventory_hostname in groups['rke2_servers'][0]

- name: Verify RKE2 cluster status
  ansible.builtin.shell: |
    export KUBECONFIG=/etc/rancher/rke2/rke2.yaml
    /var/lib/rancher/rke2/bin/kubectl get nodes
  register: cluster_status
  changed_when: false
  failed_when: false
  when: inventory_hostname in groups['rke2_servers'][0]
