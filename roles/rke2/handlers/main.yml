---
- name: Restart systemd-sysctl
  ansible.builtin.service:
    state: restarted
    name: systemd-sysctl
  when:
    - not rke2_reboot

- name: Restart containerd
  ansible.builtin.service:
    state: restarted
    name: containerd
  when:
    - not rke2_reboot

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: true

- name: Restart fapolicyd
  ansible.builtin.service:
    state: restarted
    name: fapolicyd
  when:
    - not rke2_reboot

- name: Restart rke2-server
  ansible.builtin.service:
    state: restarted
    enabled: true
    name: rke2-server
  throttle: 1
  when:
    - not rke2_reboot
    - ("rke2_servers" in group_names)

- name: Restart rke2-agent
  ansible.builtin.service:
    state: restarted
    enabled: true
    name: rke2-agent
  throttle: 1
  when:
    - not rke2_reboot
    - ("rke2_agents" in group_names)

- name: Reload NetworkManager
  ansible.builtin.systemd:
    name: NetworkManager
    state: reloaded
  when:
    - not rke2_reboot

- name: Reboot the machine
  ansible.builtin.reboot:
    reboot_timeout: 300
  throttle: 1
  when:
    - rke2_reboot

- name: Restart canal pods
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/rke2/rke2.yaml
    state: present
    api_version: apps/v1
    kind: DaemonSet
    name: rke2-canal
    namespace: kube-system
    definition:
      spec:
        template:
          metadata:
            annotations:
              kubectl.kubernetes.io/restartedAt: "{{ ansible_date_time.iso8601 }}"
  when: inventory_hostname == groups['rke2_servers'][0]
  delegate_to: "{{ groups['rke2_servers'][0] }}"

- name: Restart coredns pods
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/rke2/rke2.yaml
    state: present
    api_version: apps/v1
    kind: Deployment
    name: rke2-coredns-rke2-coredns
    namespace: kube-system
    definition:
      spec:
        template:
          metadata:
            annotations:
              kubectl.kubernetes.io/restartedAt: "{{ ansible_date_time.iso8601 }}"
  when: inventory_hostname == groups['rke2_servers'][0]
  delegate_to: "{{ groups['rke2_servers'][0] }}"
